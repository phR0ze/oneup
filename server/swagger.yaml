openapi: 3.0.0
info:
  title: OneUp API
  description: API contract for the OneUp project.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /actions:
    post:
      summary: Create a new action
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                desc:
                  type: string
                  example: "Sample Action"
                value:
                  type: integer
                  example: 10
                category_id:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Action created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  desc:
                    type: string
                    example: "Sample Action"
                  value:
                    type: integer
                    example: 10
                  category_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    get:
      summary: Get all actions
      responses:
        '200':
          description: List of actions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    desc:
                      type: string
                      example: "Sample Action"
                    value:
                      type: integer
                      example: 10
                    category_id:
                      type: integer
                      example: 1
                    created_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
                    updated_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
  /actions/{id}:
    get:
      summary: Get specific action by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: Action details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  desc:
                    type: string
                    example: "Sample Action"
                  value:
                    type: integer
                    example: 10
                  category_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    put:
      summary: Update specific action by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 123
                desc:
                  type: string
                  example: "Updated Action"
                value:
                  type: integer
                  example: 20
                category_id:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Action updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  desc:
                    type: string
                    example: "Updated Action"
                  value:
                    type: integer
                    example: 20
                  category_id:
                    type: integer
                    example: 2
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    delete:
      summary: Delete specific action by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '204':
          description: Action deleted successfully
  /login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                handle:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  token_type:
                    type: string
                    example: "Bearer"
  /categories:
    post:
      summary: Create a new category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Sample Category"
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  name:
                    type: string
                    example: "Sample Category"
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    get:
      summary: Get all categories
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    name:
                      type: string
                      example: "Sample Category"
                    created_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
                    updated_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
  /categories/{id}:
    get:
      summary: Get specific category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: Category details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  name:
                    type: string
                    example: "Sample Category"
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    put:
      summary: Update specific category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 123
                name:
                  type: string
                  example: "Updated Category"
      responses:
        '200':
          description: Category updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  name:
                    type: string
                    example: "Updated Category"
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    delete:
      summary: Delete specific category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '204':
          description: Category deleted successfully
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
  /passwords:
    post:
      summary: Create a new password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                password:
                  type: string
                  example: "securepassword123"
      responses:
        '201':
          description: Password created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  salt:
                    type: string
                    example: "randomsaltvalue"
                  hash:
                    type: string
                    example: "hashedpasswordvalue"
                  user_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    get:
      summary: Get passwords filtered by user ID
      parameters:
        - name: user_id
          in: query
          required: false
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: List of passwords
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    salt:
                      type: string
                      example: "randomsaltvalue"
                    hash:
                      type: string
                      example: "hashedpasswordvalue"
                    user_id:
                      type: integer
                      example: 1
                    created_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
  /passwords/{id}:
    get:
      summary: Get specific password by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: Password details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  salt:
                    type: string
                    example: "randomsaltvalue"
                  hash:
                    type: string
                    example: "hashedpasswordvalue"
                  user_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    delete:
      summary: Delete specific password by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '204':
          description: Password deleted successfully
  /points:
    post:
      summary: Create a new points entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: integer
                  example: 10
                user_id:
                  type: integer
                  example: 1
                action_id:
                  type: integer
                  example: 2
      responses:
        '201':
          description: Points entry created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  value:
                    type: integer
                    example: 10
                  user_id:
                    type: integer
                    example: 1
                  action_id:
                    type: integer
                    example: 2
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    get:
      summary: Get all points or filter by user ID and/or action ID
      parameters:
        - name: user_id
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: action_id
          in: query
          required: false
          schema:
            type: integer
            example: 2
      responses:
        '200':
          description: List of points
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    value:
                      type: integer
                      example: 10
                    user_id:
                      type: integer
                      example: 1
                    action_id:
                      type: integer
                      example: 2
                    created_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
                    updated_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
  /points/{id}:
    get:
      summary: Get specific points entry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: Points entry details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  value:
                    type: integer
                    example: 10
                  user_id:
                    type: integer
                    example: 1
                  action_id:
                    type: integer
                    example: 2
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    put:
      summary: Update specific points entry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 123
                value:
                  type: integer
                  example: 20
                action_id:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Points entry updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  value:
                    type: integer
                    example: 20
                  user_id:
                    type: integer
                    example: 1
                  action_id:
                    type: integer
                    example: 2
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    delete:
      summary: Delete specific points entry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '204':
          description: Points entry deleted successfully
  /rewards:
    post:
      summary: Create a new reward
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: integer
                  example: 100
                user_id:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Reward created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  value:
                    type: integer
                    example: 100
                  user_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    get:
      summary: Get all rewards or filter by user ID
      parameters:
        - name: user_id
          in: query
          required: false
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: List of rewards
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    value:
                      type: integer
                      example: 100
                    user_id:
                      type: integer
                      example: 1
                    created_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
                    updated_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
  /rewards/{id}:
    get:
      summary: Get specific reward by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: Reward details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  value:
                    type: integer
                    example: 100
                  user_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    put:
      summary: Update specific reward by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 123
                value:
                  type: integer
                  example: 200
      responses:
        '200':
          description: Reward updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  value:
                    type: integer
                    example: 200
                  user_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    delete:
      summary: Delete specific reward by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '204':
          description: Reward deleted successfully
  /roles:
    post:
      summary: Create a new role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Admin"
      responses:
        '201':
          description: Role created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Admin"
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    get:
      summary: Get all roles
      responses:
        '200':
          description: List of roles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Admin"
                    created_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
                    updated_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
  /roles/{id}:
    get:
      summary: Get specific role by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Role details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Admin"
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    put:
      summary: Update specific role by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: "Updated Role"
      responses:
        '200':
          description: Role updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Updated Role"
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    delete:
      summary: Delete specific role by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Role deleted successfully
  /users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "newuser"
                email:
                  type: string
                  example: "newuser@example.com"
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  username:
                    type: string
                    example: "newuser"
                  email:
                    type: string
                    example: "newuser@example.com"
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    username:
                      type: string
                      example: "newuser"
                    email:
                      type: string
                      example: "newuser@example.com"
                    created_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
                    updated_at:
                      type: string
                      format: date-time
                      example: "2025-06-12T12:00:00Z"
  /users/{id}:
    get:
      summary: Get specific user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  username:
                    type: string
                    example: "newuser"
                  email:
                    type: string
                    example: "newuser@example.com"
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    put:
      summary: Update specific user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 123
                username:
                  type: string
                  example: "updateduser"
                email:
                  type: string
                  example: "updateduser@example.com"
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  username:
                    type: string
                    example: "updateduser"
                  email:
                    type: string
                    example: "updateduser@example.com"
                  created_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2025-06-12T12:00:00Z"
    delete:
      summary: Delete specific user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '204':
          description: User deleted successfully